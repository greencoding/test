一、HiDO需求及维护
1、参与开发核心服务&运管中心改造：
（1）版本更新说明、组件预置清单，工具统一在HiDO页面描述，changelog.txt、versioninfoex.xml文件由HiDO生成，持续集成构建时使用HiDO的文件覆盖原来的文件；
（2）构建过程从HiDO触发，而不是用持续集成构建编号关联，构建过程中进行源码级别的国际化合规校验，能查询校验报告，但不阻塞后续的操作，产品集成方也能查询的合规结果；
（3）优化设计和实现，intserv、hicenter概念没必要引入；
2、独立完成构架线上化改造：
（1）提供版本创建、项目编号绑定，权限控制，版本更新说明，预置组件清单描述，集成服务&运管中心版本控制（web构架），模型文件中changelog.txt、versioninfoex.xml、packageinfo.xml、properties.xml、framework.xml文件由HiDO生成，持续集成构建时使用HiDO的文件覆盖原来的文件；
（2）构建出包：构架包直接在HiDO通过持续集成构建流程出包，无需再通过构建结束后手动上传至HiDO的方式，针对使用高版本集成服务的构建，持续集成将自动进行成果物结构调整，构建出新模式的包；
（3）版本发布：发布流程从ids-workflow迁移至ids-activiti，并且针对web、client构架执行不同的审批流程，web构架需要QA、业务负责人以及开发总监审批，client构架只需要业务负责人以及开发总监审批；
（4）新的资产库：线上化改造构架历史数据迁移到新的资产库，数据来源变成新的资产库，提升查询性能；
3、参与开发产品模块功能重构：
（1）组装模块：构架、运管中心、移动应用、独立软件组装功能开发，因为构架、运管中心已经改造完成，对接了新的资产库，提升查询性能；
（2）配置模块：门户配置中的风格、功能菜单、下载项、用户文档进行重构功能开发；
（3）其他模块：支持全局检测，产品比对功能，对产品上线后出现的问题进行排查和修复；
4、独立完成特性产品&云产品改造：
（1）特性产品与云产品在版本创建、产品组装、封装描述、资源包管理、成员管理、成果物存储、版本发布上都与普通产品对齐，用产品新的开发模式，方便统一进行产品的管理；
（2）对特性产品与云产品的构建、受控进行特殊处理展示，因为没有与持续集成对接，构建只是将封装信息进行打包，并且将构建信息同步到新、老资产库各一份，受控、发布则将新资产库状态改变，受控库、发布库再次同步一份数据；
（3）将特性产品以及云产品的历史数据迁移到新的资产库，包含已发布的以及开发中的数据，开发中的数据直接在ids创建版本，升级更加平滑；
5、参与完成非组件化产品管理：
（1）在HiDO提供管理入口，并且提供版本管理、项目信息管理、成果物管理、补丁管理、版本信息线上描述的功能，实现新老体系产品执行相同发布和交付标准以及线上流程约束，保持一致性；
（2）版本信息线上描述，描述范围包括：产品属性、运行环境、支持语言、版本更新说明和产品构成；
（3）将历史数据进行治理，对存储在hicoo的非组件化产品的数据迁移到hido，进行成果物的管理，共完成611个版本数据迁移（已发布470个，开发中141个），其中146个版本包含新体系组件，真正做到所有产品信息统一入资产库，且HiCoo产品信息展示统一从资产库出；
6、独立完成资源包管理：
（1）建立产品资源包池：资源包与产品关联，上传资源包时支持选适用的产品版本，产品下如果有适用该资源包的软件则会自动选入该资源包，提供资源包可查看引用产品关系；
（2）openAPI资源包进行特殊处理，在产品侧上传时按照规则进行拦截，提示到产品能力编排进行上传管理，最后再对接HiDo同步接口同步到产品资源包池，形成闭环；
（3）通过以产品的维度将资源包进行管理，产品开发成员制作，产品集成使用，可以使得资源包的使用更加精确，范围更小，增加产品选择资源包的效率，同时增加资源包快速添加功能，以防有一些历史的资源包未关联产品而选择不到，通过反向筛选过滤资源包可以更加精准的确定大池子中适用的资源包。

不足之处需要改进：
1、对所负责的业务的上下游系统没有全面的认识，导致排查问题的时候比较困难；
2、缺乏主动发现问题，提出问题改进的能力；